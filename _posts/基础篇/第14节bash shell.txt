修改系统语系编码：
locale 查看系统支持的语系类型；
LANG=xxx 设定语系；
export LANG  改变系统语系；


/etc/shells 记录系统可用的shell
~/.bash_history  用户指令history存放路径

type -t command 查看command类型，内建命令buildin、命令别名alias、外部命令file

echo $AAB 查看变量内容
PATH="$PATH:"/home/yaya  增加变量内容
"" 包含内容保留变量属性， '' 包含内容成为普通字符串。
name=muyalei 定义变量。unset name 取消变量内容。
env/export 查看当前shell下的环境变量。  export 变量，将自定义变量声明为系统变量。
/dev/random 随机数产生器，echo $RANDOM 获取0-32767间的随机数
set 列出当前shell接口下的所有环境变量与自定义变量。

locale 查看系统上存在的语系文件。 /usr/bin/locale 存放系统语系文件的路径。
LANG=xxx  export LANG 设定当前shell接口字符编码，或者修改配置文件/etc/sysconfig/i18n
变量SUPPORTED 内容是 当前shell支持的语系

变量的键盘读取、声明、数组
read -p "提示字符" -t 30 aaa  从键盘读入内容赋值给变量aaa，-p指定提示内容，-t指定等待输入时间 秒。
declare -a var 将变量var定义为数组array。数组读取 ${var[number]}
declare -i sum 将变量sum定义为整数数字integer
declare -r sum 将变量sum定义为只读
declare -x sum 将sum声明成环境变量

变量内容读取、编辑
$muyalei 、${muyalei} 读取变量内容，如 ${muyalei}=/aaa/bbb/ccc/ddd
${muyalei#/*/} 从变量内容首字符开始读取，删除最短的两个 分隔符/ 之间内容，${muyalei##/*/}删除最长的
两个 分隔符/ 间的内容；  ${muyalei#/*/}=/bbb/ccc/ddd   ${muyalei##/*/}=ddd
${muyalei%/*} 从变量内容尾字符开始读取，删除 分隔符/ 到尾字符之间最短的变量内容，${muyalei%%/*} 删除最长的
${muyalei%/*}=/aaa/bbb/ccc   ${muyalei%%/*}=空

ulimit -f 1024 限制用户能建立的最大文件，单位kb

alias clr='clear' 命令别名。
unalias clr 取消命令别名。

HISTSIZE 变量设定history记录数目。
histoty n 列出n笔历史命令。
history -c 清除~/.bash_history中的历史命令。
history -w filename 将目前的历史命令写入filename文件，不加filename默认记录到~/.bash_history。
history !number 执行历史纪录中的该笔命令
history !! 执行上一笔命令。

/etc/issue 系统登录前提示信息
/etc/motd 登陆后提示信息

/etc/profile  PATH、USER、MAIL、HOSTNAME、HISTSIZE、umask等系统变量的设定文件

万用字符
*  0个或多个任意字符，同正则表达式的的.*
？ 一定有1个字母。正则表达式中 . 表示一定有一个字母或数字
!  表示 非 。正则表达式中没有特殊含义，为感叹符号。
\  跳脱符

`command` 同$(command)， 在一串指令中，`包含的指令先被执行，回传讯息再由其他指令处理。

数据流重导向
 > 将被写入文件原始内容覆盖，>>在被写入文件原始内容基础上累加
 < 将原本由键盘输入的信息改由文件导入，cat > 11.txt << eof  <<用于指定键盘输入结束字符。
 1> 正确输出STDOUT，1可省略不写,被写入文件原有数据被覆盖
 2> 错误输出ERROR
 2>&1 正确、错误输出 输出到同一个文件     
/dev/dull 垃圾桶
ls -lnra > 11.txt 2> 22.txt 

 ；无论前一个命令执行结果如何，都执行后一个指令
 && 前一个指令正确执行，则执行后一个指令，否则后一个指令不予执行
 || 前一个指令执行错误，则执行后一个指令
判断依据是变量 ？的回传值，正确时是0 

排序命令
sort 排序
uniq 相同的行只显示一行
wc 显示文件内容行数、字数、字符数

tee 双向重导向。 cat 11.txt | tee -a 22.txt 读取11.txt文件内容，除显示在屏幕上，另以累加的方式导入22.txt
    参数-a 累加，同 >> 

字符转换命令
tr 支持正则表达式，只能处理stdin
stdin | tr 'aa' 'bb'  将字符aa转换成bb
stdin | tr -d 'aaa'  删除字符串aaa
stdin | tr -s 'x'  删除重复字符
stdin | col -x 用8个空格取代tab标志^I









系统预设文件，即开机时系统首先读取的文件：

/etc/sysconfig/i18n   包括几个重要的环境变量，如语系等；可以在该文件中直接修改语系，或者使用命令LANG=
/etc/profile  定义了几个重要的变量，PATH、USER、MAIL、HOSTNAME、HISTSIZE、umask等
/etc/inputrc 针对键盘热键的设定的配置文件

/etc/bashrc 定义了umask的功能，同时设定了提示字符的内容 PS1

/etc/man.config  定义了man命令的读取路径 MANPATH ；自行安装的程序man文件路径可能是/usr/local/softpackage/man



个人设定文件

~/.bash_profile,~/.bash_login,~/.profile   定义个人化的路径（PATH）与环境变量等。只在开机时读取一次。

~/.bashrc 个人设定值最好写在这个文件中，如命令别名、路径等，每次执行shell脚本时该文件都会被重新执行一次，
所以是最完整的。

~/.bash_history  与历史命令history相关。设置环境变量 HISTSIZE

~/.bash_logout 记录 当我注销bash后，系统帮我做完哪些动作后再离开

修改环境设定文件后，重新读取设定文档的3种方法：
logout后再重新login到bash内即可重新读取环境设定档了；使用souce命令，souce ~/.bashrc ；使用" ." ，. ~/.bashrc


stty（setting tty）：设定终端机的输入按键代表的意义；stty -a，列出当前所有的按键代表的意义；


特殊字符的使用：

cp test[1-5] /etc/  将test1，test2，。。test5若存在就复制到/etc/目录下，反之，cp test[!1-5] /etc/ 
cat /lib/modules/`uname -r`/kernel 先执行``中引用的内容后，在执行整条命令语句；
cp *[A-Z]* /tmp 将名称中含有大写字母的文件复制到/tmp下
ls -ald /etc/*[35]*  列出etc目录下文件名中同时包含3和5的文件；



数据流重导向： > 将本应输出到屏幕上的内容重导向到指定文件下，若文件不存在则创建，存在则覆盖文件中原有内容；
               >>  将内容累加到文件已存在内容下；  ls -al >> 1.txt

1> ,将正确的数据输出到指定的文件中，正确的输出内容，1可省略；2> 将错误的信息输出到指定的文件中去，报错信息；
find / -name test > list_right 2> list_error 将STDOUT输出到文件list_right中去，将STDERR输出到文件list_error中去

2> /dev/null 抛弃错误的输出数据 ；

find / -name test > list 2>&1 将正确的输出数据与错误的输出数据保存到同一个文件中，只能用 &

cat > catfile，从键盘输入内容到catfile这个文件中，若不存在则创建，ctrl+D结束输入；
cat > catfile < somefile 将文件somefile中的内容输入到catfile中；
cat > catfile << eof 定义结束的输入字符，当输入eof时结束输入。


命令执行的判断依据：；，&&，||     原理：读取指令执行后的回传值 $?
 ； 以该符号分割的命令将依次执行。sync；cat 1.txt；shutdown -h now
 && 当前一个命令正确执行后，才执行下一条指令，否则不执行下一条指令； ls /muyalei && touch /muyalei/1.txt，
    若存在muyalei这个目录就在其下新建文件1.txt，若不存在就算了；
 || 当前一条指令执行错误，才执行下一条指令；ls /muyalei || touch /muyalei/1.txt ，若不存在muyalei这个目录，
    则新建目录muyalei，并在其下建立文件1.txt。若不存在muyalei，则ls muyalei 这条指令有误，才执行后面的指令。




 | 管线命令，仅能处理前一条指令传来的正确的输出，即stdout

cut 讯息截取,逐行分析，在每一行中取出需要的信息；cut -d '分隔符' -f fields，例如取出PATH的第3段 echo $PATH | cut -d ':' -f 3
    取出最近一个月登录主机的用户名 last | cut -d ' ' -f 1
grep 取出包含目标信息的整行数据

sort、wc、uniq 排序命令
sort 对输出的数据进行排序； last | cut -d '空格 ' -f -1 | sort
uniq 将重复的资料仅列出一个显示   last | cut -d '空格 ' -f -1 | sort | uniq  ；-c 统计重复的个数
wc 统计输出数据的行数、英文字数、字符数；

tee 双向重导向。将数据保存到一个文件中并且显示在屏幕上。 last | tee last.list | sort

字符转换命令：tr,col,join,paste,expand



split 分割文件；-b 想要分割成文件的大小 split -b 300b/k/m /etc/test test ；-l 以行数来进行分割 split -l 10 /etc/test test

cat test* >> test  将以test开头的文件内容合并成为一个文件test，test*文件仍然会被保留













一、
   Python脚本开机自动运行；本帖适用于使用systemd的Linux系统，现在流行的Linux发行版都使用systemd。
台服务程序是随系统自启动的，我们只要把Python脚本配置为服务就行了。需要注意的一点是你Python脚本
的启动时机，它依赖不依赖其他服务（网络连接、一些分区的挂载等等）。

示例:
1、Python脚本,一个你要自启动的Python脚本，我使用 /home/snail/autorun.py为例。
2、创建Unit配置文件,$sudo vim /lib/systemd/system/autorun.service
   写入如下内容：
   [Unit]
   Description=Test Service
   After=multi-user.target

   [Service]
   Type=idle
   ExecStart=/usr/bin/python /home/snail/autorun.py

   [Install]
   WantedBy=multi-user.target

   上面定义了一个叫 Test Service 的服务，它在multi-user环境起来之后运行；ExecStart参数指定我们要运行的程序；
   idle确保脚本在其他东西加载完成之后运行，它的默认值是simple。注意使用绝对路径。
   为了获得脚本的输出信息，我们可以重定向到文件：
   ExecStart=/usr/bin/python /home/snail/autorun.py > /home/snail/autorun.log 2>&1
3、更改配置文件的权限：
   $sudo chmod 644 /lib/systemd/system/autorun.service
4、使配置文件生效
   $sudo systemctl daemon-reload
   $sudo systemctl enable autorun.service

原文链接:http://blog.topspeedsnail.com/archives/5426
   

二、详细解析
Ubuntu 15.x /CentOS 7.x 以后 设置开机启动,添加自定义系统服务,自定义开机启动。
Ubuntu 15.04今天 装LANMPS套件，装好后开机启动死活设置不了，查看了Ubuntu 15.04的新特性才发现:
Systemd——Ubuntu 15.04的服务管理器已经切换到Systemd；
Unity 7.3——Unity桌面版本升级到7.3，包含很多小的优化；
Compiz 0.9.12——窗口管理器升级到0.9.12；
Linux Kernel 3.19

Ubuntu 系统服务脚本目录：
 /lib/systemd/system/

CentOS 系统服务脚本目录：
/usr/lib/systemd/
有系统（system）和用户（user）之分，

如需要开机没有登陆情况下就能运行的程序，存在系统服务（system）里，即：
/lib/systemd/system/
反之，用户登录后才能运行的程序，存在用户（user）里
服务以.service结尾。

示例:(以nginx开机运行为例)
1、建立服务文件
   vim /lib/systemd/system/nginx.service 
   [Unit]
   Description=nginx
   After=network.target
 
   [Service]
   Type=forking
   ExecStart=/www/lanmps/init.d/nginx start
   ExecReload=/www/lanmps/init.d/nginx restart
   ExecStop=/www/lanmps/init.d/nginx  stop
   PrivateTmp=true
 
   [Install]
   WantedBy=multi-user.target
   
   [Unit]:服务的说明
   Description:描述服务
   After:描述服务类别

   [Service]服务运行参数的设置
   Type=forking是后台运行的形式
   ExecStart为服务的具体运行命令
   ExecReload为重启命令
   ExecStop为停止命令
   PrivateTmp=True表示给服务分配独立的临时空间

   注意：[Service]的启动、重启、停止命令全部要求使用绝对路径
   [Install]服务安装的相关设置，可设置为多用户
2、保存目录
   以754的权限保存在目录：/lib/systemd/system
3、设置开机自启动
   systemctl enable nginx.service

4.其他命令
任务 旧指令 新指令 
使某服务自动启动 chkconfig --level 3 httpd  on        systemctl enable httpd.service 
使某服务不自动启动 chkconfig --level 3 httpd off        systemctl disable httpd.service 
检查服务状态 service httpd status         systemctl status httpd.service （服务详细信息,systemctl is-active httpd.service （仅显示是否 Active) 
显示所有已启动的服务 chkconfig --list      systemctl list-units --type=service 
启动某服务 service httpd start       systemctl start httpd.service 
停止某服务 service httpd stop       systemctl stop httpd.service 
重启某服务 service httpd restart       systemctl restart httpd.service

示例:
systemctl start nginx.service  启动nginx服务
systemctl enable nginx.service  设置开机自启动
systemctl disable nginx.service  停止开机自启动
systemctl status nginx.service   查看服务当前状态
systemctl restart nginx.service   重新启动服务
systemctl list-units --type=service 查看所有已启动的服务

本文永久更新链接地址：http://www.linuxidc.com/Linux/2015-05/117169.htm

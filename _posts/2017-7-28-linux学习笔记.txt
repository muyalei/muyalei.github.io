1、(1)linux下,双引号内的特殊字符可以保有变量特性,但是单引号内的特殊字符则仅为一般字符;
   (2)centos7下语系设定文件是/etc/locale.conf,老版本的设定文件是/etc/sysconfig/i18n,设置中文的参数:
      NG="zh_CN.GB18030"
      LANGUAGE="zh_CN.GB18030:zh_CN.GB2312:zh_CN"
      SUPPORTED="zh_CN.UTF-8:zh_CN:zh:en_US.UTF-8:en_US:en"
      SYSFONT="lat0-sun16"
	(3)数据流重导向:
	   /dev/null,垃圾桶;
	   单尖括号表示覆盖,双尖括号表示追加;
	   ls -ln > a.txt 2> b.txt ,将标准输出信息写入a.txt文件,错误信息写入b.txt;
	   ls -ln > a.txt 2>&1 标准输出信息与错误信息都写入a.txt文件;
	(4)cat > a.txt,新建文件a.txt,从键盘输入内容;
	   cat > a.txt < b.txt,新建文件a.txt,将b.txt文件中内容写入a.txt,左单尖括号的作用是将原本
	   需要由键盘输入的数据经由档案来读入,左双尖括号的作用是定义结束输入字符;
	 (5)^I 是tab键;
	 
2、(1)将python程序设置为某特定用户登录时执行的方法:
   直接在~/.bashrc 文件下写入 python 程序名.py ,原理是开机时系统会根据根据当前登录的用户到该
   用户的家目录下读取 .bashrc文件，可以使用source ~/.bashrc 在不用重新登录的情况下读取该文件并执行;
   (2)用户登录后环境变量的加载顺序是:
   先由 /etc/passwd 取得 bash 这个 shell ，再到 /etc/profile 读取主要的环境变量，同时亦会将 /etc/inputrc 
   及 /etc/profile.d 内容均读入。之后，再到个人的家目录读取 ~/.bash_profile 及 ~/.bashrc 等档案
   
3、cut 切割字符串命令:
   -d 指定分割符,-f 指定攫取第几个字段(从1开始,与python不同),这两个参数一起使用;
   -c 不分割直接截取字符串,cut $PATH -c 12-20 截取第12到第20个字符,包含第12、20个, 12- 表示截取从第12开始到最后的所有字符;

4、简单的数据处理:
  (1)sort 排序:
   -f 忽略大小写的差异；
   -b 忽略最前面的空格符；
   -r 反向排序;
   -M 以月份的名字来排序,如JAN、DEC;
   -t 指定分割符默认是tab键,-k 指定以哪个区间(field)排序;
   -u 相同的数据只显示1行,即(uniq);
   -n 以纯数字排序,默认是使用文字形态进行排序;
   (2)uniq 去重:
   -i 忽略大小写的不同,-c 计数;
   (3)wc 统计总数:
   -l 仅列出行,-w 仅列出多少字(英文单字),-m 多少字符,不加参数默认列出行数、字数、字符数;
   (4)tr 删除或替换字符:
   不加参数,tr '[a-z]' '[A-Z]',将所有小写字母替换成大写;
   -d 删除指定字符,-s 取代掉重复的字符;
   (5)col 处理tab键^I:
   col -x ,将tab键转换成对等的空格键;
   (6)join 将两个相关的数据文件中有相同数据的一行加在一起:
   -t 指定分隔符,默认以空格符分隔数据,默认比对第一个字段的数据,第一个文件逐行与第二个文件的所有行比对,
      如果相同,则将2行数据联成1行,且用来比对的字段放在开头(只保留1个)、第一个文件的行数据写在前面、
	  第一个文件的行数据写完后面跟上第二个的数据;
   -i 忽略大小写的差异;
   -1 指定第一个文件要用哪个字段来分析,-2 指定第二个文件用哪个字段来分析;   
   (7)paste 将多个文件的对应行直接贴在一起:
   -d 指定分隔符,默认是以tab键分隔;
   - 如果file部分写成-,表示来自STDIN的资料的意思;
   (8)expand 将tab键(^I)替换成指定数量的空格键:
   -t 指定用几个空格键来替换tab键,通常1个tab可以用8个空格键代替;
   (9)split 切割文件;
   -b 后面可接欲分割成的文件大小,可加单位,如b、k、m等;
   -l 以行数来进行分割;
   使用数据流重导向将分割后的数据合并;
   (10)xargs 参数代换:
   解释:读入stdin的数据,并且以空格符或断行字符作为分辨,将stdin的资料分割成其后所跟命令的参数;
   -0 将输入的stdin中的特殊字符,如^、\、空格键等还原成一般字符;
   -e EOF的意思,后面接1个字符串(接的字符串与小横杠-之间没有空格!),当xargs分析到这个字符串时,停止工作;
   -p 执行命令前询问使用者;
   -n 后面接次数,每次命令执行时,要使用几个参数的意思;

5、(1)正则表达式:
   * 前一个RE字符存在0个或任意多个;
   . 一定存在一个任意字符;
   (2)延伸正则表达式:
   + 前一个RE字符存在1个或1个以上;
   ? 前1个RE字符存在0个或1个
   | 或;
   () 群组;
   grep使用延伸正则表达式,需要加上-E参数,egrep是grep -E的命令别名;
   
6、printf 格式化打印:
   (1)print '打印格式' `cat printf.txt`
   变量格式:%ns 多少个字符;%ni 多少个整数;%N.nf N是总共位数,n是小数点后位数,f代表floating;
   样式:\a 警告声音输出;\b 退格键;\f 清屏;\n 输出新的一行;\r Enter 按键;\t 水平的tab键;\v 垂直的tabl键;
   (2)printf \xNN  NN为两位数字,转换数字为字符,如printf '\x45\n';
   
      
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
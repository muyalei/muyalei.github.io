自行安装tarball套件：
/usr/local/xxx/src 套件源文件存放在该目录下；
/usr/local/xxx/    将套件安装在该目录下，方便管理，删除该套件时只需删除该目录，etc、lib、bin、man 目录分别存放设定文件、函式库、执行文件、说明文件；
./configure --help | more 查看可用参数；
./configure --prefix=/usr/local/xxx [其他参数] ，执行configure侦测程序，建立makefile文件，--prefix指定这个套件被安装的路径，并
将这一信息写入makefile文件；
make clean；make  清除目标文件，因为源码参数在本机可能被修改，已存在目标文件时源码不会再进行编译，make执行编译动作；
make check
make install 安装套件，安装路径由写入makefile中的参数指定；
MANPATH /usr/local/xxx/man 将套件说明文件写入/etc/man.conf中；

conifgure/config侦测程序会侦测本机环境，根据本机环境创建makefile文件，make根据makefile文件中的参数对源码进行编译。
 
源码：程序代码的纯文本文件；
程序：可执行二进制文件 binary file；
编译：将纯文本文字转换成binary file；

gcc编译器：
gcc xx.c 将源码文件编译成为binary file ，*.c C语言写的程序
gcc -c xx.c 将xx.c编译为连结档xx.o
gcc -o xx cc.o aa.o bb.o 将连结档aa.o bb.o cc.o 连结成程序xx
gcc xx.c -lm -L/lib -L/usr/lib -I/usr/include
编译xx.c时使用libm.so这个函式库，函式库路径为/lib /usr/lib ，使用的include预设文件路径是/usr/include
-l 使用函式库
-m 使用libm.so这个函式库
-L 指定函式库路径 /lib   /usr/lib
-I 指定c语言预设文件#include <stdio.h>的路径，预设是在/usr/include/stdio.h
gcc -Wall/-O xx.c 使用CFLAGs旗标

使用make安装tarball：
首先解压tarball，查看readme、install文件中tarball安装需要的相依套件
./config或./configure 生成makefile
make clear 删除目标文件等中间过程文件
make 根据编译设定文件makefile进行编译
make install 将套件安装到指定目录下

make安装套件注意事项：
/usr/local/src 将tarball源码放在该目录下
/usr/local 该目录下安装自定义套件，/usr/local/apache/etc、bin、lib、man ，将apache套件安装在/usr/local/aphache
目录下，etc中放设定文件，bin中放可执行档，lib中放函式库，man中放说明文件
MANPATH  /usr/local/apache/man 在/etc/man.config文件中加入该行，在MANPATH中加入apache的说明文件
make执行时会默认读取CFLAGS这个变量

将函式库写入内存的高速缓存实现高速读取
/etc/ld.so.conf 将要实现高速读取的函式库所在 目录  写入该文件中，使用ldconfig即可读入写入高速缓存区
ldconfig -p 查看内存中读入的函式库

ldd -v /usr/bin/passwd 查看可执行档passwd使用的函式库

md5sum filename 读取文件的MD5校验值

file filename 判断文件是否为binary file。


export PATH="$PATH":/usr/local/xxx/bin 将新套件的命令加入到PATH中；
MANPATH /usr/local/xxx/man ，将新套件的man page路径加入到/etc/man.config文件中。














































